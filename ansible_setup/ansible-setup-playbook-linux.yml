---
- name: basics
  hosts: "{{ variable_host }}"
  become: true
  tags:
    - basics
  vars_files:
    - vars.yaml
  tasks:
    - command: apt update
    - apt:
        name: zsh
        state: present
    - apt:
        name: sqlite3
        state: present
    - apt:
        name: clang
        state: present
    - user: # set zsh as default shell!
        name: "{{ ansible_user }}"
        shell: "/bin/zsh"

- name: emacs
  hosts: "{{ variable_host }}"
  become: true
  tags: emacs
  vars_files:
    - vars.yaml
  tasks:
    - command: apt remove -y --autoremove emacs emacs-common
    - apt_repository:
        repo: ppa:kelleyk/emacs
        state: present
    - command: apt update
    - apt:
        name: emacs28
        state: present
    - apt:
        name: ripgrep
        state: present
    - apt:
        name: fd-find
        state: present

- name: doom. Only cloning, install is manual (~/.config/emacs/bin/doom install) as it's interactive!
  hosts: " {{variable_host}} "
  tags: emacs
  vars_files:
    - vars.yaml
  tasks:
    - command: git clone --depth 1 https://github.com/doomemacs/doomemacs ~/.config/emacs
      ignore_errors: true

- name: miniconda
  hosts: " {{variable_host}} "
  tags: miniconda
  vars_files:
    - vars.yaml
  tasks:
    - script:
        cmd: ../install_miniconda_linux.sh

- name: install syncthing
  hosts: "{{ variable_host }}"
  tags: syncthing
  vars_files:
    - vars.yaml
  become: true
  tasks:
    - command: curl -o /usr/share/keyrings/syncthing-archive-keyring.gpg https://syncthing.net/release-key.gpg
    - command: echo "deb [signed-by=/usr/share/keyrings/syncthing-archive-keyring.gpg] https://apt.syncthing.net/ syncthing stable" | tee /etc/apt/sources.list.d/syncthing.list
    - command: apt-get update
    - apt:
        name: syncthing
        state: present
    - command: systemctl --user enable syncthing.service
    - command: systemctl --user start syncthing.service

- name: docker engine
  hosts: "{{ variable_host }}"
  vars_files:
    - vars.yaml
  become: true
  tags:
    - docker
  tasks:
    - file:
        path: /etc/apt/keyrings
        state: directory
    - file:
        path: /etc/apt/keyrings/docker.gpg
        state: absent
    - shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    - shell: echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    - apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        update_cache: yes
    - file:
        path: ~/.docker/cli-plugins
        state: directory
    - file:
        path: ~/.docker/cli-plugins/docker-compose
        state: absent 
    - command: curl -SL https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
    - command: chmod +x ~/.docker/cli-plugins/docker-compose
    - command: "usermod -aG docker {{ ansible_user }}"
    - shell: |
        systemctl stop docker
        DOCKER_ROOT="{{ docker_root }}"
        EXEC_START="ExecStart=/usr/bin/dockerd --data-root $DOCKER_ROOT -H fd:// --containerd=/run/containerd/containerd.sock"
        sudo sed -i "s|.*ExecStart.*|${EXEC_START}|" /lib/systemd/system/docker.service
        sudo systemctl daemon-reload
        sudo systemctl start docker
    - file:
        path: "{{ docker_root }}/volumes"
        state: directory
        recurse: true
        owner: "{{ ansible_user }}"
        mode: 0777

- name: docker group
  hosts: "{{ variable_host }}"
  vars_files:
    - vars.yaml
  become: true
  tags:
    - docker
    - dockergroup
  tasks:
    - group:
        name: docker
        state: present
    - user:
        name: '{{ ansible_user }}'
        groups: docker
        append: yes


- hosts: " {{ variable_host }} "
  tags: golang
  vars_files:
    - vars.yaml
  roles:
    - golang
  tasks:
      - name: Add to bash path
        ansible.builtin.lineinfile:
          path: ~/.bashrc
          line: "export PATH=/opt/go/{{ goversion }}/bin:$PATH"
      - name: Add to zsh path
        ansible.builtin.lineinfile:
          path: ~/.zshrc
          line: "export PATH=/opt/go/{{ goversion }}/bin:$PATH"
